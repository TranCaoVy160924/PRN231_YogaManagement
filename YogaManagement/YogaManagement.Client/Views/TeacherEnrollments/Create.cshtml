@using YogaManagement.Client.OdataClient.YogaManagement.Contracts.Course;
@using YogaManagement.Client.OdataClient.YogaManagement.Contracts.TeacherEnrollment;
@model TeacherEnrollmentDTO;

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>TeacherEnrollment</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input hidden class="form-check-input" asp-for="IsActive" value=@true />
            <div class="form-group">
                <label asp-for="StartDate" class="control-label"></label>
                @Html.TextBoxFor(x => x.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date"})
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDate" class="control-label"></label>
                @Html.TextBoxFor(x => x.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date"})
                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeacherProfileId" class="control-label"></label>
                <select asp-for="TeacherProfileId" class="form-control" asp-items="ViewBag.TeacherProfileId"></select>
            </div>
            @Html.HiddenFor(x => x.YogaClassId)
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
