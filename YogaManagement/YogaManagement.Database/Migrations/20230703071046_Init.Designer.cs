// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YogaManagement.Database.EF;

#nullable disable

namespace YogaManagement.Database.Migrations
{
    [DbContext(typeof(YogaManagementDbContext))]
    [Migration("20230703071046_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 41,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 42,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 43,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 44,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 45,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 46,
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TeacherProfileTimeSlot", b =>
                {
                    b.Property<int>("AvailableSlotId")
                        .HasColumnType("int");

                    b.Property<int>("AvailableTeacherId")
                        .HasColumnType("int");

                    b.HasKey("AvailableSlotId", "AvailableTeacherId");

                    b.HasIndex("AvailableTeacherId");

                    b.ToTable("TeacherProfileTimeSlot");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "MEMBER",
                            Name = "Member",
                            NormalizedName = "member"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TEACHER",
                            Name = "Teacher",
                            NormalizedName = "teacher"
                        },
                        new
                        {
                            Id = 3,
                            Description = "STAFF",
                            Name = "Staff",
                            NormalizedName = "staff"
                        },
                        new
                        {
                            Id = 4,
                            Description = "ADMIN",
                            Name = "Admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "ab36278c-3ad2-4a42-a86c-1eccf70b4132",
                            Email = "member1@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name1",
                            Lastname = "LastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "member1@gmail.com",
                            NormalizedUserName = "member1@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAECmHEOqeemv6qUKEYSZv8Tt1VJOSarrRcAbHzhfKDg0KlgwSmAG9/NqdZ8P3ALNFEA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member1@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "0a04bf71-3363-4eeb-94db-111efb5f68f1",
                            Email = "member2@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name2",
                            Lastname = "LastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "member2@gmail.com",
                            NormalizedUserName = "member2@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJEClG936B2a3TwJeRMxQX7barfj1BeqpK4kBIIzqKzkUI1GgwUZ/QgvmekeTq+hww==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member2@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "fd166624-5140-47de-a4d6-43236bb4bf3c",
                            Email = "member3@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name3",
                            Lastname = "LastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "member3@gmail.com",
                            NormalizedUserName = "member3@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFkrIgyXD2B/ukFkCMqcyYgXJJzHJY3epZWV/9VVad+OYpupmhrFFk9Ahty6qmXceA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member3@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "bd7b55ce-0eb0-48ac-906f-45e1d7767e17",
                            Email = "member4@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name4",
                            Lastname = "LastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "member4@gmail.com",
                            NormalizedUserName = "member4@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEK5IA4ZVRC/nGgNbtOoBL7Q2PeexOym4AKOz5Cg1Z9LzByYmPLdO8zN7RA2u+5qc6w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member4@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "5fd8d9dc-868b-4f7b-b013-0cea68052c0c",
                            Email = "member5@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name5",
                            Lastname = "LastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "member5@gmail.com",
                            NormalizedUserName = "member5@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDzYh0Vaz4NQveGqgtbXhww+MiJBPgLVC0Plg7emI7yvYTNKvIe2Am4jWtQM/Dxzig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member5@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "f66ff583-bafc-45d6-8c78-d5e3d5d60e27",
                            Email = "member6@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name6",
                            Lastname = "LastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "member6@gmail.com",
                            NormalizedUserName = "member6@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGFehKE20ArbVbxIHhMW+Nhs6CS62K72j47iiWJhTroNYhDXjd5lksLrdSU6VOIT4g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member6@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "6fc3e1d6-42d4-4c6f-9da9-9ab71bcda354",
                            Email = "member7@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name7",
                            Lastname = "LastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "member7@gmail.com",
                            NormalizedUserName = "member7@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDYgAiu126Jzxwo3V01Mo0Yct+m1qhlaYxRRJzenvt9MF6ff3F1QyYwP/BPXlJcE5w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member7@gmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "9a700062-3b90-4bd7-817b-0192ee78bae5",
                            Email = "member8@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name8",
                            Lastname = "LastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "member8@gmail.com",
                            NormalizedUserName = "member8@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGVx4zfYfdKMSgSI9TILuxE+Wx+vQ4uLPZuFDvnEW2Aw4O7F4yA9vYSQKyYDHUQvIg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member8@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "bdc198ea-f127-4e21-9426-845eec806072",
                            Email = "member9@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name9",
                            Lastname = "LastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "member9@gmail.com",
                            NormalizedUserName = "member9@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEB0vJG2RP/1j7BtTj3YRo4l1hJt9HAJx06QEzK4aSwpAjlbmsapwkCJdrE+Y6GTAng==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member9@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "d83ddcfc-e540-4165-af0f-5fbf5644eec4",
                            Email = "member10@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name10",
                            Lastname = "LastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "member10@gmail.com",
                            NormalizedUserName = "member10@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENTXn/Vo/7VGs9KGMs+3xFiXNFatYrDOb3ZJN/FE3xIHDhGdJfbhUFfGHtW2gl98vQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member10@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "721628fe-59ea-45e9-b39a-7e8c9a3f783f",
                            Email = "member11@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name11",
                            Lastname = "LastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "member11@gmail.com",
                            NormalizedUserName = "member11@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBQbjbRk6nqhFemoIhDFvO+VBWQ4DoNeG9GEMuUDw1uJMV5mHgTyq9DbwxVLdiEK2A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member11@gmail.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "07206be0-49a3-44ea-a6f4-f000f99b0ceb",
                            Email = "member12@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name12",
                            Lastname = "LastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "member12@gmail.com",
                            NormalizedUserName = "member12@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEI82KXFa0qz50LWKiTKcp+CPAt+SX06xqSPBSBesEV28MkX2tNIaeFszw2kwtrrzKw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member12@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "a6809122-6df7-4e9b-9892-5bd803a690ea",
                            Email = "member13@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name13",
                            Lastname = "LastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "member13@gmail.com",
                            NormalizedUserName = "member13@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJWhQFDUhX9QyPPAfvOHAKKB7rGCfsAPgK1aWav7Bs6QjAVPWNt0kdq8SPnVX1mvCA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member13@gmail.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "59257aef-898e-40db-a840-9c4b3f83750c",
                            Email = "member14@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name14",
                            Lastname = "LastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "member14@gmail.com",
                            NormalizedUserName = "member14@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJU1LhU4YPWo5yrswJnPERLgz8yuP42G3OSic/3VN2qltvzZijkTBOrBbISTaB0YYA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member14@gmail.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "6e2ff243-415b-4450-8032-5a77b169722a",
                            Email = "member15@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name15",
                            Lastname = "LastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "member15@gmail.com",
                            NormalizedUserName = "member15@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEL44MXAh95qrlYaUvYaFX0b+zhZwKsASOrrjopj1KH5jEyapuEIA1Zm1/i/WDgL5nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member15@gmail.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "dcc09394-cf22-472a-9133-767c380fa955",
                            Email = "member16@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name16",
                            Lastname = "LastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "member16@gmail.com",
                            NormalizedUserName = "member16@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPTqw20f5ECotI3zPSMwfTFCzuoM4+PoEpeTl/Yjf9DZsalAzkBxvicA2EtdylcxIw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member16@gmail.com"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "bba7e4ae-b7af-4b6e-95a5-c2a582f20eba",
                            Email = "member17@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name17",
                            Lastname = "LastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "member17@gmail.com",
                            NormalizedUserName = "member17@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEHCQa4T1hpaIo7e1oG+8rRhBidu/GuvSHiq/4NHGVyw+fcag594OGEAZNFC7kV8Qrw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member17@gmail.com"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "19207dea-6532-450b-8c1c-69abd5b7ba53",
                            Email = "member18@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name18",
                            Lastname = "LastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "member18@gmail.com",
                            NormalizedUserName = "member18@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMFy0Vxg7IuSmOC19aeYws98P2EbmkJNiLaEBTBkH0rOjgz7mcqR5HC5hZO5WWqxOw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member18@gmail.com"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "58930076-1271-4a39-93ba-209f3e5cc118",
                            Email = "member19@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name19",
                            Lastname = "LastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "member19@gmail.com",
                            NormalizedUserName = "member19@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAED7BgLSWvRFq8ZgV/oH7jQvuIdGEtLxErubcSWR/XABsuMS3Xb5WfEYpNp0zgI8yCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member19@gmail.com"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "2d69825e-3e74-4e9b-8fea-c470acb49fd1",
                            Email = "member20@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name20",
                            Lastname = "LastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "member20@gmail.com",
                            NormalizedUserName = "member20@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEArM5CzFgzJotzmNqLKwwYQfQG+0mMZHqQh56XBYeAmxlkeW6IAPCrQKIJlpjsOlMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member20@gmail.com"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "40716dee-32cd-4ab4-af45-0c8454c69640",
                            Email = "member21@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name21",
                            Lastname = "LastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "member21@gmail.com",
                            NormalizedUserName = "member21@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOL1AzdTz6uWBjLRFWm8aMJ0U6bh1t58H3Pphr+VGtJkUtY0EKhi7+Rc5CzfIShQmw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member21@gmail.com"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "1cfda307-100d-47c7-9406-3891e9f034e0",
                            Email = "member22@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name22",
                            Lastname = "LastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "member22@gmail.com",
                            NormalizedUserName = "member22@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAED9FBZxL+WilWCS+s3EXZNHuJ3MLoJU0RoJt79i1XCwjGQZxp2IvzUjT9APlPTyLjQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member22@gmail.com"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "344150f5-3ce4-4a24-87a9-49bd98b54174",
                            Email = "member23@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name23",
                            Lastname = "LastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "member23@gmail.com",
                            NormalizedUserName = "member23@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIIXHRpx9waokb1ZQmpF5dVyfgtPlUMwZPqGcfcZYSJQrS03bV/HElaty/PVSTe1Yw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member23@gmail.com"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "5539a583-9a0c-40ca-8c48-e2a72deb3d5d",
                            Email = "member24@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name24",
                            Lastname = "LastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "member24@gmail.com",
                            NormalizedUserName = "member24@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOXhPhbsmck8zK47T572w+BdE7qRa7zaD55+Ag8dui2dd2h67MrPPXqOl6+CAcFb+g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member24@gmail.com"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "30d74b90-9ae3-4047-86ae-31c73725ad30",
                            Email = "member25@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name25",
                            Lastname = "LastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "member25@gmail.com",
                            NormalizedUserName = "member25@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKRBWAzCZZ3Eo11OvDpT0SgY+nk5WefDvmZBJoJCez0sP2CkSZ2iwtQW/UMlRUhPzQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member25@gmail.com"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "5f80bf70-4a37-4f4d-97c7-93b70725f741",
                            Email = "member26@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name26",
                            Lastname = "LastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "member26@gmail.com",
                            NormalizedUserName = "member26@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBxLKee8bTNuopSOxWenGlz4I/wM9magNcSCQ0MqTMa1OuFXbRyzx9/UtjF2jriuiQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member26@gmail.com"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "1c33e53c-ceee-45fe-87ce-707d2f8e0b3a",
                            Email = "member27@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name27",
                            Lastname = "LastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "member27@gmail.com",
                            NormalizedUserName = "member27@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDAIoLkOpd1nD9jshDG9Qm1g66TdtQ8kKZqw4Tuzr3hOjcu1mb+hYRxhVlR14ftwhQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member27@gmail.com"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "396515ad-287b-47f2-9e16-672ec66dafbf",
                            Email = "member28@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name28",
                            Lastname = "LastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "member28@gmail.com",
                            NormalizedUserName = "member28@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKUf9NOlk3fnUovhPjIKvZsKdr1woxQdrn53f8cHcqxux0S1mg54bAvudEcSZOI2+Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member28@gmail.com"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "9f721388-3288-4c43-80d6-6634c4f46a61",
                            Email = "member29@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name29",
                            Lastname = "LastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "member29@gmail.com",
                            NormalizedUserName = "member29@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENOPS16fuC67W03so1G+kO5JEBeaMa9J2byS3+vYgMDdyKNZ8QUZeHEbTDf6yovC3Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member29@gmail.com"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8aca9250-9755-41aa-8044-6e7025f66914",
                            Email = "member30@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name30",
                            Lastname = "LastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "member30@gmail.com",
                            NormalizedUserName = "member30@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFFT1ObV+F8qpmPJDBHelR5Yy2glu9bGm9MAbpTaoH4mHVWKN9QpUIHGUruw+lsrMQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member30@gmail.com"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "29008300-3a28-4bbd-b47b-4699664b3b16",
                            Email = "teacher31@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name31",
                            Lastname = "LastName31",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher31@gmail.com",
                            NormalizedUserName = "teacher31@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGtxRPZtEhTW+H1haxe3dA60QTy/gxvM/W7Ahq8yWqovm/WRUjNIf4BFcBitIVXlkg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher31@gmail.com"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e9cb74ed-7f91-4834-b271-3aaaa6c36850",
                            Email = "teacher32@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name32",
                            Lastname = "LastName32",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher32@gmail.com",
                            NormalizedUserName = "teacher32@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBj2yM14VCF42agxB+Jz98T2GdVp5cZ8EoUwWim+ryeRM3v9fPI2NhpbYUciZ0snuw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher32@gmail.com"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "4624ac43-3755-4923-9051-3aae977dac41",
                            Email = "teacher33@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name33",
                            Lastname = "LastName33",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher33@gmail.com",
                            NormalizedUserName = "teacher33@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKn5nLEuJC0WZiMDOEgGSWRka+UYLO+ir39jl3A/GnuYVSRIxokIDt/a5hT57LHb5g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher33@gmail.com"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "52532a24-2fde-428a-93b5-940961527ff0",
                            Email = "teacher34@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name34",
                            Lastname = "LastName34",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher34@gmail.com",
                            NormalizedUserName = "teacher34@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEK68gDNWon3UPGk3hWl4aiNRHc7rJ+g79cAIbeeV+X/b3xv0gMn05fY5iOfmu+sxrg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher34@gmail.com"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8bbf4f96-3148-4974-b730-6cec2cdb428a",
                            Email = "teacher35@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name35",
                            Lastname = "LastName35",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher35@gmail.com",
                            NormalizedUserName = "teacher35@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDpq3aNOwK+GSP+wvNnwLyiYjpQ5QgHtRxV4BmWFg1B784SiWMvCb47/0/2VJ17KOA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher35@gmail.com"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "7e2fab2d-9e22-4711-b5b0-d6aea4721a53",
                            Email = "teacher36@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name36",
                            Lastname = "LastName36",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher36@gmail.com",
                            NormalizedUserName = "teacher36@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJAACLZTBZw3xXnOLrg4U7INu8C7EbbZyBD+Ufa2MLARI1RSGbataxd9uOI5kPMqHQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher36@gmail.com"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "5ab68b88-d245-4cb7-ad80-b3d77c7a9f08",
                            Email = "teacher37@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name37",
                            Lastname = "LastName37",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher37@gmail.com",
                            NormalizedUserName = "teacher37@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIezWPmU1VrqMJhxxnYxozCBgtWiPaqa3fqkZmU4mc82Uwao3/Iny4ooGfThYrx3RA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher37@gmail.com"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "d5788f99-0f3d-4f36-90f5-da49e3cb05c1",
                            Email = "teacher38@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name38",
                            Lastname = "LastName38",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher38@gmail.com",
                            NormalizedUserName = "teacher38@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPKfI3PoLmClY0Qu2gqJ4NWj9uohsvZDcXwHdG90yDsR0gilfX997vEeahXKe+pPbQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher38@gmail.com"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "c86d6742-7cdc-434f-a16f-76831d85b568",
                            Email = "teacher39@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name39",
                            Lastname = "LastName39",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher39@gmail.com",
                            NormalizedUserName = "teacher39@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJUWsXBfYanT0yiBxfznwolBp3+fxRC/Qs5/bxk0+DPglpfiknmgyVQtxb3Ac/EQMA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher39@gmail.com"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "1699d32b-380d-438b-9119-c136d3f929ef",
                            Email = "teacher40@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name40",
                            Lastname = "LastName40",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher40@gmail.com",
                            NormalizedUserName = "teacher40@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBRgsSVxpoiFs77EsPh8OA1nC5+IP6FfShSzDwBars4uZIIQa+IeGazBXtgXyk+lbg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher40@gmail.com"
                        },
                        new
                        {
                            Id = 41,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "3426f008-bdac-4fa0-8cf2-e26e1864b782",
                            Email = "staff41@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name41",
                            Lastname = "LastName41",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff41@gmail.com",
                            NormalizedUserName = "staff41@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEHEMgEY7p60mwK59vyJ8z2Q5zalUqd+sOqJpIUVeenCTufUcoVtsJJfUchoV4fBcgw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff41@gmail.com"
                        },
                        new
                        {
                            Id = 42,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "6bc3b28a-4f9c-4c4b-8e83-20bd552d95f9",
                            Email = "staff42@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name42",
                            Lastname = "LastName42",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff42@gmail.com",
                            NormalizedUserName = "staff42@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEO08EmOkQjl0WdDNkQ95OWTqD2npv3P6WOOtqiZUklUjSqN7DyiBI2ZVnf5cEixk8A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff42@gmail.com"
                        },
                        new
                        {
                            Id = 43,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "9a4c373c-03a3-4f66-b7a2-5684c7475585",
                            Email = "staff43@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name43",
                            Lastname = "LastName43",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff43@gmail.com",
                            NormalizedUserName = "staff43@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMdBedzxLfz/WJUToh4JMFEVgW0BpDiGOIC95icMBMZVB0lDO4XqyPTBCcks4TAdZw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff43@gmail.com"
                        },
                        new
                        {
                            Id = 44,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e4aa1155-e5ca-43a5-8757-7223dbe76271",
                            Email = "staff44@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name44",
                            Lastname = "LastName44",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff44@gmail.com",
                            NormalizedUserName = "staff44@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAELNK3UaDh5t+jSx499bQ4yx84NIIxaAUTG1Q2ow++4uhLVPHOhFIWoz9C1puw37+3Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff44@gmail.com"
                        },
                        new
                        {
                            Id = 45,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "d644876e-a797-4039-a91c-2be253e07dcb",
                            Email = "staff45@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name45",
                            Lastname = "LastName45",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff45@gmail.com",
                            NormalizedUserName = "staff45@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFxIJxooamuct7NM+qF80y0dXFacEhyHwgInnIa6eQJXWei2omdTvHW+GrJYqrilWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff45@gmail.com"
                        },
                        new
                        {
                            Id = 46,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "a9e3d3c7-a9a0-44da-b0d2-391e308b0b00",
                            Email = "admin46@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name46",
                            Lastname = "LastName46",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin46@gmail.com",
                            NormalizedUserName = "admin46@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPvaeLyvT0qOAjN07c4EtdXKShO5UBwgD23CSOzMRQUHaTAgUWrwC+N5CVQGlTQ0lA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "admin46@gmail.com"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Category2"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Category3"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Category4"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Category5"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Category6"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Category7"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Category8"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Category9"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Category10"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Yoga course number 1",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course1",
                            Price = 100.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Yoga course number 2",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course2",
                            Price = 200.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Yoga course number 3",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course3",
                            Price = 300.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Yoga course number 4",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course4",
                            Price = 400.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Yoga course number 5",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course5",
                            Price = 500.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Description = "Yoga course number 6",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course6",
                            Price = 600.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Description = "Yoga course number 7",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course7",
                            Price = 700.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Description = "Yoga course number 8",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course8",
                            Price = 800.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Description = "Yoga course number 9",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course9",
                            Price = 900.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            Description = "Yoga course number 10",
                            EnddDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course10",
                            Price = 1000.0,
                            StartDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Enrollment", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId", "YogaClassId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 2,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 3,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 4,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 5,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 6,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 7,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 8,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 9,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 10,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 11,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 12,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 13,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 14,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 15,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 16,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 17,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 18,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 19,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 20,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 21,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 22,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 23,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 24,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 25,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 26,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 27,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 28,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 29,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 30,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("MemberLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            MemberLevel = 0
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotId", "YogaClassId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("Schedule");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 11,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 13,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 15,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 12,
                            YogaClassId = 2
                        },
                        new
                        {
                            TimeSlotId = 14,
                            YogaClassId = 2
                        },
                        new
                        {
                            TimeSlotId = 21,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 23,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 25,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 22,
                            YogaClassId = 4
                        },
                        new
                        {
                            TimeSlotId = 24,
                            YogaClassId = 4
                        },
                        new
                        {
                            TimeSlotId = 31,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 33,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 35,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 32,
                            YogaClassId = 6
                        },
                        new
                        {
                            TimeSlotId = 34,
                            YogaClassId = 6
                        },
                        new
                        {
                            TimeSlotId = 16,
                            YogaClassId = 7
                        },
                        new
                        {
                            TimeSlotId = 17,
                            YogaClassId = 7
                        },
                        new
                        {
                            TimeSlotId = 26,
                            YogaClassId = 8
                        },
                        new
                        {
                            TimeSlotId = 27,
                            YogaClassId = 8
                        },
                        new
                        {
                            TimeSlotId = 36,
                            YogaClassId = 9
                        },
                        new
                        {
                            TimeSlotId = 37,
                            YogaClassId = 10
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherProfileId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("TeacherEnrollments");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 31,
                            YogaClassId = 4
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 32,
                            YogaClassId = 2
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 33,
                            YogaClassId = 4
                        },
                        new
                        {
                            Id = 34,
                            EndDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 34,
                            YogaClassId = 2
                        },
                        new
                        {
                            Id = 35,
                            EndDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 35,
                            YogaClassId = 4
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("TeacherProfiles");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            AppUserId = 31
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 32
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 33
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 34
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 35
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 36
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 37
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 38
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 39
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 40
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherSchedule", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("bit");

                    b.HasKey("TimeSlotId", "TeacherProfileId");

                    b.HasIndex("TeacherProfileId");

                    b.ToTable("TeacherSchedule");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 40,
                            IsTaken = false
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 17,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 22,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 23,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 24,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 25,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 31,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 32,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 33,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<bool>("IsAdminWallet")
                        .HasColumnType("bit");

                    b.Property<double>("TotalDeposit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 31,
                            AppUserId = 31,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 32,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 33,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 34,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 35,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 36,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 37,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 38,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 39,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 40,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 41,
                            AppUserId = 41,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 42,
                            AppUserId = 42,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 43,
                            AppUserId = 43,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 44,
                            AppUserId = 44,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 45,
                            AppUserId = 45,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 46,
                            AppUserId = 46,
                            Balance = 0.0,
                            IsAdminWallet = true,
                            TotalDeposit = 0.0
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("YogaClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Class1",
                            Size = 19,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Name = "Class2",
                            Size = 18,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Class3",
                            Size = 17,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Name = "Class4",
                            Size = 16,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Name = "Class5",
                            Size = 15,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            Name = "Class6",
                            Size = 14,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 7,
                            Name = "Class7",
                            Size = 13,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 8,
                            Name = "Class8",
                            Size = 12,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 9,
                            Name = "Class9",
                            Size = 11,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 10,
                            Name = "Class10",
                            Size = 10,
                            YogaClassStatus = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeacherProfileTimeSlot", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", null)
                        .WithMany()
                        .HasForeignKey("AvailableSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", null)
                        .WithMany()
                        .HasForeignKey("AvailableTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Enrollment", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Member", "Member")
                        .WithMany("Enrollments")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("Enrollments")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("Member")
                        .HasForeignKey("YogaManagement.Domain.Models.Member", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Schedule", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", "TimeSlot")
                        .WithMany("Schedule")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("Schedule")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeSlot");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherEnrollment", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("TeacherEnrollments")
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("TeacherEnrollments")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("TeacherProfile")
                        .HasForeignKey("YogaManagement.Domain.Models.TeacherProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherSchedule", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", "TeacherProfile")
                        .WithMany()
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Transaction", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("Wallet")
                        .HasForeignKey("YogaManagement.Domain.Models.Wallet", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Course", "Course")
                        .WithMany("YogaClasses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppUser", b =>
                {
                    b.Navigation("Member");

                    b.Navigation("TeacherProfile");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.Navigation("YogaClasses");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.Navigation("TeacherEnrollments");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TimeSlot", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Schedule");

                    b.Navigation("TeacherEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
