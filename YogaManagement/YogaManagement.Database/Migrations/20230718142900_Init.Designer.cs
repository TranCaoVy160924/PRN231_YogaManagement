// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YogaManagement.Database.EF;

#nullable disable

namespace YogaManagement.Database.Migrations
{
    [DbContext(typeof(YogaManagementDbContext))]
    [Migration("20230718142900_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 41,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 42,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 43,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 44,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 45,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 46,
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TeacherProfileTimeSlot", b =>
                {
                    b.Property<int>("AvailableSlotId")
                        .HasColumnType("int");

                    b.Property<int>("AvailableTeacherId")
                        .HasColumnType("int");

                    b.HasKey("AvailableSlotId", "AvailableTeacherId");

                    b.HasIndex("AvailableTeacherId");

                    b.ToTable("TeacherProfileTimeSlot");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "MEMBER",
                            Name = "Member",
                            NormalizedName = "member"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TEACHER",
                            Name = "Teacher",
                            NormalizedName = "teacher"
                        },
                        new
                        {
                            Id = 3,
                            Description = "STAFF",
                            Name = "Staff",
                            NormalizedName = "staff"
                        },
                        new
                        {
                            Id = 4,
                            Description = "ADMIN",
                            Name = "Admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8e835082-004b-401f-afc3-603f5a08dba1",
                            Email = "member1@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name1",
                            Lastname = "LastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "member1@gmail.com",
                            NormalizedUserName = "member1@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMt6spBpHs4wtWhuUuO2VB+WGIiqOc6YNZTS+CBFmgm84e8lCbYvdL2LD+zh8G/OKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member1@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "80aaaa5f-31d4-4476-8a13-5e816e6a7f38",
                            Email = "member2@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name2",
                            Lastname = "LastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "member2@gmail.com",
                            NormalizedUserName = "member2@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPShdWNmYEEGerIxXcYyy5o7YAiJTlQKswzHiKfGTsPsUPk+QtOkAqtGEH7RgObjWA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member2@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "2133144f-0ade-45fd-99b1-a6c8a3392860",
                            Email = "member3@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name3",
                            Lastname = "LastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "member3@gmail.com",
                            NormalizedUserName = "member3@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKQ7wpjanknUlN2tbkfKrmTZdKPz+VmYi36w+NKCTFjPQ59WsIBBt/qJIxXJEgaALQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member3@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "a071fff9-98c4-480e-9728-bc63fb395454",
                            Email = "member4@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name4",
                            Lastname = "LastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "member4@gmail.com",
                            NormalizedUserName = "member4@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEHCCXBsbYP4uRTdA73wSQ5gmGTaBssiJyLGUwQT0lUTdWGLEldIEuWMHvGMjGfP8wQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member4@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "0c7faf05-6d08-4eec-9765-1d12e52fcafd",
                            Email = "member5@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name5",
                            Lastname = "LastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "member5@gmail.com",
                            NormalizedUserName = "member5@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMQ15+jkJTCT0lT9czb6PXwTyS+MdsIuvKIb3J2sTSimBjtxsfuZgRjCQ7M3P3EZsw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member5@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "66d0dea8-56cd-40df-bea7-975f9d762931",
                            Email = "member6@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name6",
                            Lastname = "LastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "member6@gmail.com",
                            NormalizedUserName = "member6@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEEGPlgkXXZyV6VklIMawcFmT3GMskalW1PHX9NTydSdU2CzMRY8h6wSCCi5trDwYNA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member6@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "89ee9953-49c7-4abb-ba14-42621ab6b984",
                            Email = "member7@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name7",
                            Lastname = "LastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "member7@gmail.com",
                            NormalizedUserName = "member7@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEH3TN7b4/DwWR+K1XwCRFDgPIX7+TDojJqXvIr8ixR3jX36BgLCSvy4MH93yCku7pw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member7@gmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8801e715-0db6-4431-9ad2-05a857221e5a",
                            Email = "member8@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name8",
                            Lastname = "LastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "member8@gmail.com",
                            NormalizedUserName = "member8@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBfwqYoRDpDhAPiQyiburTSGSfHk3F61osIi4+yH2bcSlQD/xMFTF4bKhuvh4jNoWQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member8@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "ea4b2d31-7281-4f2b-9ad9-e20780375490",
                            Email = "member9@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name9",
                            Lastname = "LastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "member9@gmail.com",
                            NormalizedUserName = "member9@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEF1aSF6abPlwz42TIEbzxK6Fr/SZxDr/ZlOawQ9TL9MyF4j8bN6vUyamERyeQDPrnQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member9@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "bd50706d-9802-40e8-9036-339e55447ce8",
                            Email = "member10@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name10",
                            Lastname = "LastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "member10@gmail.com",
                            NormalizedUserName = "member10@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEHZpjNIkpNmW6SvqagwHBtEXtO/h5zxIRS/pAgkD/YqXvqg7UQQn2pvkvCoP6geaKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member10@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "4ac038dc-41ea-450c-b9ef-8e8a96ac9982",
                            Email = "member11@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name11",
                            Lastname = "LastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "member11@gmail.com",
                            NormalizedUserName = "member11@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJnkJQhL9ETQVvhB7wJl/7I0X2sP1ExhAI2hIdu36qULWgpbCwv3hPnQkrSde2aNnQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member11@gmail.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b0cef192-8cea-4246-bc25-4658094c2228",
                            Email = "member12@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name12",
                            Lastname = "LastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "member12@gmail.com",
                            NormalizedUserName = "member12@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMjxZPtiFNuzrWMsvoKePNgMciDn76YWWR6CS3fYbv9S69/dgl7ws535NZQTU/bGpg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member12@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "7ce7a857-9598-4ea2-98c3-23d9ce911530",
                            Email = "member13@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name13",
                            Lastname = "LastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "member13@gmail.com",
                            NormalizedUserName = "member13@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFcagRUZuLuZwdsHDv4bmDmMB3dwLV0xWLJZX3T9gIntRzGOHPSKJ9aS+79I2ufSFQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member13@gmail.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "9f63cfe7-c35b-4188-8f56-52da0924e4f9",
                            Email = "member14@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name14",
                            Lastname = "LastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "member14@gmail.com",
                            NormalizedUserName = "member14@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKfOsUkFaq+DJhchvj577GGc1z8Qo8SP+xLqIO/zzL/5AKiuXU5zFybC4F+wpHxn0w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member14@gmail.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "0d74508f-1109-4e5a-8910-1c916d3c8a3f",
                            Email = "member15@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name15",
                            Lastname = "LastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "member15@gmail.com",
                            NormalizedUserName = "member15@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKF64iuCWdT9LuGgykJr5NpEFvFbdcoIkaycHHaNNj1jZ7QZxWikyka/V9l81ZHLQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member15@gmail.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "0504f766-5b3e-4c68-a245-6204e5c7c7c2",
                            Email = "member16@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name16",
                            Lastname = "LastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "member16@gmail.com",
                            NormalizedUserName = "member16@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIZA0ImdEk3S0BsV/GzrIuLSXz9aao0uynRz3nZuSA3Y1AMFV/lo/WoDiK/rfkYk+g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member16@gmail.com"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b2cb47c6-3d9b-476e-b1d1-00d9806a4d79",
                            Email = "member17@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name17",
                            Lastname = "LastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "member17@gmail.com",
                            NormalizedUserName = "member17@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDjvI3fcKCWRONshw4i9PD2V8XJpcYROvToAZmriBFD/yPFbwYnQkQXKC/LeTOTRDg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member17@gmail.com"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "ff136ebc-4607-458f-b464-5e19136ff429",
                            Email = "member18@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name18",
                            Lastname = "LastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "member18@gmail.com",
                            NormalizedUserName = "member18@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEC6XedRutSIWSa/K8qQKPE/kBhr2sUpHi3w79ZOas+U5w055mYFBhOm6phePUv14Lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member18@gmail.com"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "52a296d0-29ab-4fa2-8b82-fd939b6d29d9",
                            Email = "member19@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name19",
                            Lastname = "LastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "member19@gmail.com",
                            NormalizedUserName = "member19@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMN061PgFKlpBS16ujYU+fM7b25V5LT3yrnqsycZ75v1zTHBqwIzdSc1FZ27emDE1A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member19@gmail.com"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "509a0bec-176f-4094-b9f3-89dbdd4ed793",
                            Email = "member20@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name20",
                            Lastname = "LastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "member20@gmail.com",
                            NormalizedUserName = "member20@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGPympkccn4p9ci2iZQnmYmn5Do/m8/eSQ5riBO9ZWm6scxyDZB3YvskBGh/4uvKjw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member20@gmail.com"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b1c6d9ba-6af5-4f83-b8d4-96d5ed254117",
                            Email = "member21@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name21",
                            Lastname = "LastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "member21@gmail.com",
                            NormalizedUserName = "member21@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKPL9L5l9WKQP2lm1lhH2m4BtbLrVwyN/Y1g02ZpeADNr4AxiDttgSS1dJlDDfFy2w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member21@gmail.com"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e56f69c3-3cb6-4300-9e45-32804cbd5fc0",
                            Email = "member22@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name22",
                            Lastname = "LastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "member22@gmail.com",
                            NormalizedUserName = "member22@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJn4sJMsqcY0aHRA//CAbXhRgauIslbbfRvmMjHpIA51dB76yk+YSTEgyixjSWQiFA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member22@gmail.com"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e92f2710-df1f-4f4f-a03f-7b9bc8a1c04a",
                            Email = "member23@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name23",
                            Lastname = "LastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "member23@gmail.com",
                            NormalizedUserName = "member23@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAELtZ4blVOUe8BIXTVK1h/UjQKecMgp8pr9AXNmDa4kqkt5n77bXM0vd0HXm1x6pliQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member23@gmail.com"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8c48ce07-18ea-4b69-ac2b-39712c3de233",
                            Email = "member24@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name24",
                            Lastname = "LastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "member24@gmail.com",
                            NormalizedUserName = "member24@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGusEHGJUIRFpRwTwNIGFfdblMTMmNLrqr7ql9Biz2PxQjZJebx0tXCloRrBu9MqgA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member24@gmail.com"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "750bb73b-48db-4d2e-811e-83294c49395a",
                            Email = "member25@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name25",
                            Lastname = "LastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "member25@gmail.com",
                            NormalizedUserName = "member25@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKAChzca7+3tXVN2qbcoKSsZbMLRo6/zRycZxcQcjeiZv4OZ72zp34eKMlLgys2PiQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member25@gmail.com"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "ef7e65a9-d401-43b3-9b20-82edaed4abff",
                            Email = "member26@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name26",
                            Lastname = "LastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "member26@gmail.com",
                            NormalizedUserName = "member26@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEF2feyZNyoyNefYRXnRfM+5s0LR80Sb1VqXyb3O8+NeVrf1m5qhUVr/Q2HEFsYBOjw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member26@gmail.com"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "a6e0f54e-c752-4d2d-a157-c2e2c61e4dec",
                            Email = "member27@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name27",
                            Lastname = "LastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "member27@gmail.com",
                            NormalizedUserName = "member27@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKDtiENF8qievVL0cF42XCG9/wKQlnX/m+ZsfkLkpUsGwq5TtjKRVinbSz3iFoKZYQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member27@gmail.com"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "479f4b89-03b0-4ff0-be7c-73d9be69eb9b",
                            Email = "member28@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name28",
                            Lastname = "LastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "member28@gmail.com",
                            NormalizedUserName = "member28@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPHTjZUoaC6wrkIzSQA2D47liSwqQJi/WaQxXHPa5+5t0YPZHe+BZBdH2sDUzG16NA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member28@gmail.com"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e9b14843-5638-49ab-a2a3-f012f213ab62",
                            Email = "member29@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name29",
                            Lastname = "LastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "member29@gmail.com",
                            NormalizedUserName = "member29@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBkUyTD6mS85/e0mGS6juQBhzUjw59WH5qZcRcbQ4CbRjhzIEN3RXFp8sJDLnFHmVg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member29@gmail.com"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "738f89b0-818f-4f85-8999-6f17089b6749",
                            Email = "member30@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name30",
                            Lastname = "LastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "member30@gmail.com",
                            NormalizedUserName = "member30@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGYSJ/Pi6yPA0ptsYYoRdLAiQvT4c6Qzk4s6v8TFdu54xURQAY2FRt3RiVJJXEUW6A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member30@gmail.com"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "6db2861a-6904-4732-8272-19ec25a53a67",
                            Email = "teacher31@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name31",
                            Lastname = "LastName31",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher31@gmail.com",
                            NormalizedUserName = "teacher31@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOKMHGewDTbhZWCviP2tovp/g1XOim02ow32I+T9R414QnytpRIuuToDsRBe4CCsDA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher31@gmail.com"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b13323c7-f09f-461b-ba25-3253137c3583",
                            Email = "teacher32@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name32",
                            Lastname = "LastName32",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher32@gmail.com",
                            NormalizedUserName = "teacher32@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBBeBN9ciKytanserUC7pPjhArYY+ovePJEelQJGjasybmLmyvX2bjriTJI/CE/tag==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher32@gmail.com"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "93a208ff-1fd3-4c02-8829-1e12b0690432",
                            Email = "teacher33@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name33",
                            Lastname = "LastName33",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher33@gmail.com",
                            NormalizedUserName = "teacher33@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPrmAs9aXQoWB13ozfmEKJKxtieJAOKFVQ53J+YzYkECxbjl/UfP7olYZpPB+EFnig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher33@gmail.com"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "62ce623d-11f2-4b2a-b7b7-28cc0e3c3141",
                            Email = "teacher34@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name34",
                            Lastname = "LastName34",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher34@gmail.com",
                            NormalizedUserName = "teacher34@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPhmB9t6GhdgojgHUZ8HFDj0vBaDNSrFVT6TZLA4gZz80JL2SxmVu83mT5E+tdDbCA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher34@gmail.com"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "57c41ce8-cf57-43b0-bab7-75a6c90022cb",
                            Email = "teacher35@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name35",
                            Lastname = "LastName35",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher35@gmail.com",
                            NormalizedUserName = "teacher35@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAcvCyEkMsnUPz4+e1EfAiOwnWa4oCC6qJxw1+KHxq97Az2Y6nuJn8mgawk2vPo0fg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher35@gmail.com"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b4270598-1f72-4dc6-8e69-65ba4730cc76",
                            Email = "teacher36@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name36",
                            Lastname = "LastName36",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher36@gmail.com",
                            NormalizedUserName = "teacher36@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPiySYr4nhHAbZxoRAYeJB/CDxnkimSWs8hx99iB6vgTz7iVC1xIPy2v060c/qU1tA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher36@gmail.com"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "f626fead-2fa3-4f0a-9cc5-f30598c9df90",
                            Email = "teacher37@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name37",
                            Lastname = "LastName37",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher37@gmail.com",
                            NormalizedUserName = "teacher37@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENh94MbIChpGQ4WpFsbUD/Xqg1MXQ2kLFsgYgncyNEbJS6uktSFgIwH3sFWJcGnpIw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher37@gmail.com"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "3a052510-0d67-43c1-9298-59ad0efc2d3a",
                            Email = "teacher38@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name38",
                            Lastname = "LastName38",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher38@gmail.com",
                            NormalizedUserName = "teacher38@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIrR37E2BG3mRicmj1MM4xELaCg46Xg51sCcGVqxM9LdlK90IYdAqTSvHPrLEaMiaA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher38@gmail.com"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "ff05a906-6774-4a9d-a084-b77c97a615a1",
                            Email = "teacher39@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name39",
                            Lastname = "LastName39",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher39@gmail.com",
                            NormalizedUserName = "teacher39@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIzqM7Rg5mHeyWuTem0kmmbOBzrfdBnFMuVBtpc9zEJW1jdiJrKgp3hSDgsWIQUbYw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher39@gmail.com"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "4784c23d-744b-4ab9-8711-38e81c87a294",
                            Email = "teacher40@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name40",
                            Lastname = "LastName40",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher40@gmail.com",
                            NormalizedUserName = "teacher40@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKbMu7EzFlvks4iwFRiQTeeS7iv3s5puDsBon0G/pBcgw/V1KeEDv7oNZQucUgcNuQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher40@gmail.com"
                        },
                        new
                        {
                            Id = 41,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "1257a6b7-c6d5-4900-a1ba-848db7d7164f",
                            Email = "staff41@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name41",
                            Lastname = "LastName41",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff41@gmail.com",
                            NormalizedUserName = "staff41@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAELa6b2QlyCAYDdwPJNIMoEgEK3HLJ0qXHlhIsGbXUXZIW7u5rkQ/u0UrEVFZ8NjxUw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff41@gmail.com"
                        },
                        new
                        {
                            Id = 42,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "2adc7d71-10e7-446b-aa4a-7922f73de02b",
                            Email = "staff42@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name42",
                            Lastname = "LastName42",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff42@gmail.com",
                            NormalizedUserName = "staff42@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPSbQX8+r32Pvhlnoz67IS1WF2VOrKLaynJx60MeEr4a0MQfCs1SbHTrbAJTOBrZsQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff42@gmail.com"
                        },
                        new
                        {
                            Id = 43,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "eebc14ca-1de2-46c3-98f0-ff8270b959b0",
                            Email = "staff43@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name43",
                            Lastname = "LastName43",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff43@gmail.com",
                            NormalizedUserName = "staff43@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJgLp+gmxSOWRousYaJNKThtAxv6RIMP+jNmtFzHNZHNEBmsc196KEoCVBEBpthCag==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff43@gmail.com"
                        },
                        new
                        {
                            Id = 44,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "60236553-4f03-483b-abfb-ee5a92f20326",
                            Email = "staff44@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name44",
                            Lastname = "LastName44",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff44@gmail.com",
                            NormalizedUserName = "staff44@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEATFBuuamPcrBWhBxCuQZ2qw5/a8J61pA/5YguPRHPf81fqCgdVfVBDQ07f51CJKfg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff44@gmail.com"
                        },
                        new
                        {
                            Id = 45,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "da2f001c-260f-48f2-acfd-b6042bb6e2f4",
                            Email = "staff45@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name45",
                            Lastname = "LastName45",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff45@gmail.com",
                            NormalizedUserName = "staff45@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEClXvT0+2eAuQAaNwNiIEkNXWLOoVPIActJNJLHuHfPhUqYgc+Sh4nyidsFO9PCAaA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff45@gmail.com"
                        },
                        new
                        {
                            Id = 46,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b9a559bd-5ed4-4e20-b3ab-cc5e82bec5e9",
                            Email = "admin46@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name46",
                            Lastname = "LastName46",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin46@gmail.com",
                            NormalizedUserName = "admin46@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEOOeBTLi6Ka8Zv2vppI76vI9PmvBLfb9zGA67MOrn1LzfZy3s2LMN9AS+UbY+abh9w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "admin46@gmail.com"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Category2"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Category3"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Category4"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Category5"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Category6"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Category7"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Category8"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Category9"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Category10"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Yoga course number 1",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course1",
                            Price = 100.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Yoga course number 2",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course2",
                            Price = 200.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Yoga course number 3",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course3",
                            Price = 300.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Yoga course number 4",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course4",
                            Price = 400.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Yoga course number 5",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course5",
                            Price = 500.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Description = "Yoga course number 6",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course6",
                            Price = 600.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Description = "Yoga course number 7",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course7",
                            Price = 700.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Description = "Yoga course number 8",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course8",
                            Price = 800.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Description = "Yoga course number 9",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course9",
                            Price = 900.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            Description = "Yoga course number 10",
                            EnddDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course10",
                            Price = 1000.0,
                            StartDate = new DateTime(2023, 7, 25, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Enrollment", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId", "YogaClassId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 2,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 3,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 4,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 5,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 6,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 7,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 8,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 9,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 10,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 11,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 12,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 13,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 14,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 15,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 16,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 17,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 18,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 19,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 20,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 21,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 22,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 23,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 24,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 25,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 26,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 27,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 28,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 29,
                            YogaClassId = 3,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 30,
                            YogaClassId = 1,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("MemberLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            MemberLevel = 0
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotId", "YogaClassId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("Schedule");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 11,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 13,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 15,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 12,
                            YogaClassId = 2
                        },
                        new
                        {
                            TimeSlotId = 14,
                            YogaClassId = 2
                        },
                        new
                        {
                            TimeSlotId = 21,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 23,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 25,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 22,
                            YogaClassId = 4
                        },
                        new
                        {
                            TimeSlotId = 24,
                            YogaClassId = 4
                        },
                        new
                        {
                            TimeSlotId = 31,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 33,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 35,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 32,
                            YogaClassId = 6
                        },
                        new
                        {
                            TimeSlotId = 34,
                            YogaClassId = 6
                        },
                        new
                        {
                            TimeSlotId = 16,
                            YogaClassId = 7
                        },
                        new
                        {
                            TimeSlotId = 17,
                            YogaClassId = 7
                        },
                        new
                        {
                            TimeSlotId = 26,
                            YogaClassId = 8
                        },
                        new
                        {
                            TimeSlotId = 27,
                            YogaClassId = 8
                        },
                        new
                        {
                            TimeSlotId = 36,
                            YogaClassId = 9
                        },
                        new
                        {
                            TimeSlotId = 37,
                            YogaClassId = 10
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherProfileId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("TeacherEnrollments");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 31,
                            YogaClassId = 4
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 32,
                            YogaClassId = 2
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 33,
                            YogaClassId = 4
                        },
                        new
                        {
                            Id = 34,
                            EndDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 34,
                            YogaClassId = 2
                        },
                        new
                        {
                            Id = 35,
                            EndDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 35,
                            YogaClassId = 4
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("TeacherProfiles");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            AppUserId = 31
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 32
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 33
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 34
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 35
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 36
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 37
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 38
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 39
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 40
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherSchedule", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("bit");

                    b.HasKey("TimeSlotId", "TeacherProfileId");

                    b.HasIndex("TeacherProfileId");

                    b.ToTable("TeacherSchedule");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 40,
                            IsTaken = false
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 17,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 22,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 23,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 24,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 25,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 31,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 32,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 33,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<bool>("IsAdminWallet")
                        .HasColumnType("bit");

                    b.Property<double>("TotalDeposit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 31,
                            AppUserId = 31,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 32,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 33,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 34,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 35,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 36,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 37,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 38,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 39,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 40,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 41,
                            AppUserId = 41,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 42,
                            AppUserId = 42,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 43,
                            AppUserId = 43,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 44,
                            AppUserId = 44,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 45,
                            AppUserId = 45,
                            Balance = 0.0,
                            IsAdminWallet = false,
                            TotalDeposit = 0.0
                        },
                        new
                        {
                            Id = 46,
                            AppUserId = 46,
                            Balance = 0.0,
                            IsAdminWallet = true,
                            TotalDeposit = 0.0
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("YogaClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Class1",
                            Size = 19,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Name = "Class2",
                            Size = 18,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Class3",
                            Size = 17,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Name = "Class4",
                            Size = 16,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Name = "Class5",
                            Size = 15,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            Name = "Class6",
                            Size = 14,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 7,
                            Name = "Class7",
                            Size = 13,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 8,
                            Name = "Class8",
                            Size = 12,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 9,
                            Name = "Class9",
                            Size = 11,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 10,
                            Name = "Class10",
                            Size = 10,
                            YogaClassStatus = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeacherProfileTimeSlot", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", null)
                        .WithMany()
                        .HasForeignKey("AvailableSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", null)
                        .WithMany()
                        .HasForeignKey("AvailableTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Enrollment", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Member", "Member")
                        .WithMany("Enrollments")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("Enrollments")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("Member")
                        .HasForeignKey("YogaManagement.Domain.Models.Member", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Schedule", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", "TimeSlot")
                        .WithMany("Schedule")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("Schedule")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeSlot");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherEnrollment", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("TeacherEnrollments")
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("TeacherEnrollments")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("TeacherProfile")
                        .HasForeignKey("YogaManagement.Domain.Models.TeacherProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherSchedule", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", "TeacherProfile")
                        .WithMany()
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Transaction", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("Wallet")
                        .HasForeignKey("YogaManagement.Domain.Models.Wallet", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Course", "Course")
                        .WithMany("YogaClasses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppUser", b =>
                {
                    b.Navigation("Member");

                    b.Navigation("TeacherProfile");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.Navigation("YogaClasses");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.Navigation("TeacherEnrollments");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TimeSlot", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Schedule");

                    b.Navigation("TeacherEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
