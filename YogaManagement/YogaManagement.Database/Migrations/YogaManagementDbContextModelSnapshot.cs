// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YogaManagement.Database.EF;

#nullable disable

namespace YogaManagement.Database.Migrations
{
    [DbContext(typeof(YogaManagementDbContext))]
    partial class YogaManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 5,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 6,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 7,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 8,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 9,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 11,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 12,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 13,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 14,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 15,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 16,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 17,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 18,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 19,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 20,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 21,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 22,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 23,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 24,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 25,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 26,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 27,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 28,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 29,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 30,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 31,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 32,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 33,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 34,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 35,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 36,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 37,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 38,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 39,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 40,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 41,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 42,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 43,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 44,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 45,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 46,
                            RoleId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TeacherProfileTimeSlot", b =>
                {
                    b.Property<int>("AvailableSlotId")
                        .HasColumnType("int");

                    b.Property<int>("AvailableTeacherId")
                        .HasColumnType("int");

                    b.HasKey("AvailableSlotId", "AvailableTeacherId");

                    b.HasIndex("AvailableTeacherId");

                    b.ToTable("TeacherProfileTimeSlot");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "MEMBER",
                            Name = "Member",
                            NormalizedName = "member"
                        },
                        new
                        {
                            Id = 2,
                            Description = "TEACHER",
                            Name = "Teacher",
                            NormalizedName = "teacher"
                        },
                        new
                        {
                            Id = 3,
                            Description = "STAFF",
                            Name = "Staff",
                            NormalizedName = "staff"
                        },
                        new
                        {
                            Id = 4,
                            Description = "ADMIN",
                            Name = "Admin",
                            NormalizedName = "admin"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "cc8f2029-a8d2-49dd-baa2-d9ea9adc1c91",
                            Email = "member1@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name1",
                            Lastname = "LastName1",
                            LockoutEnabled = false,
                            NormalizedEmail = "member1@gmail.com",
                            NormalizedUserName = "member1@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEEx4mjnsd8FZpuL3L/WrSmd+j7tgWZMGbSBKoqO+0jBoILm0/76LJsW7cfLm7PavrQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member1@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b865cec4-d28f-4bd0-8a2b-55d337bb568a",
                            Email = "member2@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name2",
                            Lastname = "LastName2",
                            LockoutEnabled = false,
                            NormalizedEmail = "member2@gmail.com",
                            NormalizedUserName = "member2@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBYDs64VuruKvyhxRhuqmRMHxSFyueeSg8gc1KyYSMuQBCrdAivYjs9ZKXBaj/JylA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member2@gmail.com"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "7eceddd2-3022-4106-9cc8-de81115d1314",
                            Email = "member3@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name3",
                            Lastname = "LastName3",
                            LockoutEnabled = false,
                            NormalizedEmail = "member3@gmail.com",
                            NormalizedUserName = "member3@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEJvu+DXxuNXDkZH6SQw68Cx6diMjQEJLSYOxvA7+EBQDG7gZ4EY3k2LLPc2R8gk4lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member3@gmail.com"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "62536042-dfe8-41f8-89bc-b6cbc98bffce",
                            Email = "member4@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name4",
                            Lastname = "LastName4",
                            LockoutEnabled = false,
                            NormalizedEmail = "member4@gmail.com",
                            NormalizedUserName = "member4@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEI7ZBpdW1dBGCXVW/+H7kFCoAOqPnU9hGfWAw2C3+xRRE8+JlC31TpSLYR3PrNPr/Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member4@gmail.com"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "42a171bb-a623-44e9-b729-14a4df911d48",
                            Email = "member5@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name5",
                            Lastname = "LastName5",
                            LockoutEnabled = false,
                            NormalizedEmail = "member5@gmail.com",
                            NormalizedUserName = "member5@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEN4DhELoXbVcl5UwqMHPoC9nm5S6WTCMDd8xW2syqGrZ8u0HRdR6i+tFMDhLa+f2KA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member5@gmail.com"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8d4dd902-e5b0-4110-beee-57948f49cd8f",
                            Email = "member6@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name6",
                            Lastname = "LastName6",
                            LockoutEnabled = false,
                            NormalizedEmail = "member6@gmail.com",
                            NormalizedUserName = "member6@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEB1L2lTM+ATgQWA9OH97BcW9Mr2iVUME4CBMm+71Ydp0a/Hd2Ph/D/JkKyjbIv2v7w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member6@gmail.com"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "965c75f3-2dd8-48c4-bb78-2f456ac33244",
                            Email = "member7@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name7",
                            Lastname = "LastName7",
                            LockoutEnabled = false,
                            NormalizedEmail = "member7@gmail.com",
                            NormalizedUserName = "member7@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDIZkyagSyHTPbzZwHnTXRgOb6gSIsHJsf4j+XQ1tTuspRX2KOixpCJZCnXY2jNtbQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member7@gmail.com"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "aab83e8e-3720-4012-a76c-8949a48f1b25",
                            Email = "member8@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name8",
                            Lastname = "LastName8",
                            LockoutEnabled = false,
                            NormalizedEmail = "member8@gmail.com",
                            NormalizedUserName = "member8@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFvsTj9Nh0A5uLCiXVShue1MPksZfiVsj52eo8e95R47091s/C1i6FJ/Rn/IpAEglA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member8@gmail.com"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "dbdc010d-a367-4ae1-a3ea-05595db171b4",
                            Email = "member9@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name9",
                            Lastname = "LastName9",
                            LockoutEnabled = false,
                            NormalizedEmail = "member9@gmail.com",
                            NormalizedUserName = "member9@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENAJ9zHcxDJnccV/3CjGpqP7p70r/ScqtgUosM3NJfICKHAA7prsremLvJAWFXJbFQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member9@gmail.com"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "560e5f59-b7c1-430c-a1b8-3a1f07f12ba6",
                            Email = "member10@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name10",
                            Lastname = "LastName10",
                            LockoutEnabled = false,
                            NormalizedEmail = "member10@gmail.com",
                            NormalizedUserName = "member10@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEANSSmOIsHOkA2sRQ7NX8FnyBTzTzRqjcWy40EHXhVP03cDapFnTtGbPPfMk9wznIQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member10@gmail.com"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "69246b46-26e0-4071-b4ee-62ab26bd6437",
                            Email = "member11@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name11",
                            Lastname = "LastName11",
                            LockoutEnabled = false,
                            NormalizedEmail = "member11@gmail.com",
                            NormalizedUserName = "member11@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAED5BOoh9gh2RjsXrudBezq1JulGU8kh7Udf2FrIpUFd2dPW1oelvJgXshD5MCWlJ4A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member11@gmail.com"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "895cede5-74f0-423e-95f8-4ae7a58daf83",
                            Email = "member12@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name12",
                            Lastname = "LastName12",
                            LockoutEnabled = false,
                            NormalizedEmail = "member12@gmail.com",
                            NormalizedUserName = "member12@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAwqHEe4BWaIP7dhnDDCN4NYsueqvcc3hk5ka+AsMW3N4UVplgFDbCLIXk6BTjwmhw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member12@gmail.com"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8422d426-61e5-4593-ae71-07bf056e5c4f",
                            Email = "member13@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name13",
                            Lastname = "LastName13",
                            LockoutEnabled = false,
                            NormalizedEmail = "member13@gmail.com",
                            NormalizedUserName = "member13@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDqf8MMk+bRRImOQl+IC+qBUZVyeEnCr85JbgIcXsXiWaCDZ2O6523S7orD4caBHFg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member13@gmail.com"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "eccad797-05ab-48ca-97f6-3f2bdf6633f0",
                            Email = "member14@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name14",
                            Lastname = "LastName14",
                            LockoutEnabled = false,
                            NormalizedEmail = "member14@gmail.com",
                            NormalizedUserName = "member14@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEP3EhfGhZ5Pqw0nF/fIaMSxe5tp8r98n/UtuMTDFZEr7lwJ1GgsyWW6Nvvxw5/81Nw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member14@gmail.com"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "7ee6e075-733d-40a0-8b61-1715197dfe01",
                            Email = "member15@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name15",
                            Lastname = "LastName15",
                            LockoutEnabled = false,
                            NormalizedEmail = "member15@gmail.com",
                            NormalizedUserName = "member15@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEEDlGV2WCWAuDP500+o1BUKQQQObayYZTUdTIwPAPsaMekRhwqBaaykkIMgg83E8ig==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member15@gmail.com"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "f5ea3a45-5528-46c2-b216-78b7aa0a5052",
                            Email = "member16@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name16",
                            Lastname = "LastName16",
                            LockoutEnabled = false,
                            NormalizedEmail = "member16@gmail.com",
                            NormalizedUserName = "member16@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGGUvo/zBfhebShRoS60DI1P3g3MlfVMYwx+AOxlz6bMk7L+AHIzedOxBvSb465dbg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member16@gmail.com"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b58bf21c-536e-47e7-a992-6b16e67be131",
                            Email = "member17@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name17",
                            Lastname = "LastName17",
                            LockoutEnabled = false,
                            NormalizedEmail = "member17@gmail.com",
                            NormalizedUserName = "member17@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEEm50jOpqLWlEjo/HsBkiSzMz7A1kDGvf9J8lOlRPwe7oFpiReOsTuMyJvdWm9dwCw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member17@gmail.com"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "9245d8cf-18fb-4590-8f22-83e8952ba660",
                            Email = "member18@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name18",
                            Lastname = "LastName18",
                            LockoutEnabled = false,
                            NormalizedEmail = "member18@gmail.com",
                            NormalizedUserName = "member18@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAECSC/T75VQkgOgulJvoLUUclcC0fUdIDRME9cJx88lcbDeJx/jnV9uqM940xESLrvA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member18@gmail.com"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "ec1b1ebd-dac1-4a93-a340-475dca39ea39",
                            Email = "member19@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name19",
                            Lastname = "LastName19",
                            LockoutEnabled = false,
                            NormalizedEmail = "member19@gmail.com",
                            NormalizedUserName = "member19@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMASRcATRUI2sUlAAl/fK+l9Ww0EgAjxmI7+sMNWkbCg0Xvzc+mVEQUuXaSckCSKSg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member19@gmail.com"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "afceecfa-c828-4e57-aeee-da0ad3880a06",
                            Email = "member20@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name20",
                            Lastname = "LastName20",
                            LockoutEnabled = false,
                            NormalizedEmail = "member20@gmail.com",
                            NormalizedUserName = "member20@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEM4TSRUibrAR+IMGybBGEC9hwYZKTMuf3nBA4otFBZtxSVNRzAC/PjwEdQEVOs+WPw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member20@gmail.com"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "bb5420bd-a2be-4758-a486-eea11495c863",
                            Email = "member21@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name21",
                            Lastname = "LastName21",
                            LockoutEnabled = false,
                            NormalizedEmail = "member21@gmail.com",
                            NormalizedUserName = "member21@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBeMw+8qNuFR0qMNOqHnCtMLqDCvqbhoUNRetde3MM33sug+tbN//8ZlZAuFptyrHA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member21@gmail.com"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "0447b575-6e6b-4bbd-ba9c-7424e3b2cd75",
                            Email = "member22@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name22",
                            Lastname = "LastName22",
                            LockoutEnabled = false,
                            NormalizedEmail = "member22@gmail.com",
                            NormalizedUserName = "member22@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBShV6gPlbDjSaDwhpJKN580jkwpMS8J/RDaR2w04RCC6yem+8AMr8RClACgR0pyiw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member22@gmail.com"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "462c6514-6143-4679-8bfa-a49ba8a45860",
                            Email = "member23@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name23",
                            Lastname = "LastName23",
                            LockoutEnabled = false,
                            NormalizedEmail = "member23@gmail.com",
                            NormalizedUserName = "member23@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAOckl/cJ4iBBIdCQaIVNdnk/g6OrNLCjjZgUm9ATRmdTebKDQx4LVdFX5MsK3oCQg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member23@gmail.com"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "b68a6fbb-f095-4317-8198-bc8aff790e38",
                            Email = "member24@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name24",
                            Lastname = "LastName24",
                            LockoutEnabled = false,
                            NormalizedEmail = "member24@gmail.com",
                            NormalizedUserName = "member24@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMK5eZpjEH0yiOr4o3Sdj2jsdGuSeQkncYTFnVN/uTxin/yy4GBybkuDSKC6+btRLg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member24@gmail.com"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "cc921b97-7eb9-4646-81e2-f58633bc42bb",
                            Email = "member25@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name25",
                            Lastname = "LastName25",
                            LockoutEnabled = false,
                            NormalizedEmail = "member25@gmail.com",
                            NormalizedUserName = "member25@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAECwpM8jF+IGKP+DM5jrs8pdhWhVG75H79EMhyuupvbzQZTZ/1AWY9iB9IxWZ3tHgGA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member25@gmail.com"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e6735d26-6db9-43c5-a19e-78d9fa090dd5",
                            Email = "member26@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name26",
                            Lastname = "LastName26",
                            LockoutEnabled = false,
                            NormalizedEmail = "member26@gmail.com",
                            NormalizedUserName = "member26@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBYnC9XpXSWABbJM90tEDjsGASuboTEs6FdSc4ff2etS0rvb06/L+um+V7egL6CBwQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member26@gmail.com"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "68d16fad-c2ac-48f8-986a-9626b5ffbe84",
                            Email = "member27@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name27",
                            Lastname = "LastName27",
                            LockoutEnabled = false,
                            NormalizedEmail = "member27@gmail.com",
                            NormalizedUserName = "member27@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAt1KJZm/5jGzoZPtFG073hCEXNi4et1XIjkwQkuucz4ciGMXfCwof/5oIn+uuN1Dw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member27@gmail.com"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "678d02dd-0726-43e9-a228-956e60c5e05e",
                            Email = "member28@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name28",
                            Lastname = "LastName28",
                            LockoutEnabled = false,
                            NormalizedEmail = "member28@gmail.com",
                            NormalizedUserName = "member28@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIKDnsm0T+3OO18BG6vCTZz67sKwTx204qBfBFxEGNahD0xtRCcclL29TGM+RUaEdw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member28@gmail.com"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "10c70826-ad77-4aff-89c5-690070da47d2",
                            Email = "member29@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name29",
                            Lastname = "LastName29",
                            LockoutEnabled = false,
                            NormalizedEmail = "member29@gmail.com",
                            NormalizedUserName = "member29@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEFDh+5wFFxJ5/aSI1GHCBRQ38hhsEwFGtZe04GRuo3bVXd6mZWvwn/KVcuc0n1zQ9A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member29@gmail.com"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "fa8ac6e8-e657-4eb8-842d-9f5e4cb760f4",
                            Email = "member30@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name30",
                            Lastname = "LastName30",
                            LockoutEnabled = false,
                            NormalizedEmail = "member30@gmail.com",
                            NormalizedUserName = "member30@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBTEgqptiOg62RzxAsDpnC4Xhg7H8GOlLu9xq9EHciFc8z6HjqNGfCkzFoVNQYJ01A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "member30@gmail.com"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "891265cb-4658-4aff-a8ec-582f90c3ec8c",
                            Email = "teacher31@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name31",
                            Lastname = "LastName31",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher31@gmail.com",
                            NormalizedUserName = "teacher31@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEH3UHPeQXe+OZESzWdAt/+Z8u0egm5Wn1QwWrT15Ms0zGtyOrQb0R/298W+AflYC6w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher31@gmail.com"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "0eb5c42c-16f5-4f4c-a039-a430168f2d11",
                            Email = "teacher32@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name32",
                            Lastname = "LastName32",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher32@gmail.com",
                            NormalizedUserName = "teacher32@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAFJaXPV9MQVb++DeFDBjsSUahWS6cl8FnGLAgGRCFZ4e7m6rIXFfV0FREhyAM0V1A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher32@gmail.com"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "9ca257ff-dc6b-45c8-b850-d506efc6ce25",
                            Email = "teacher33@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name33",
                            Lastname = "LastName33",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher33@gmail.com",
                            NormalizedUserName = "teacher33@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAK/uuC1uodlf/s7Zs+Rl8mRxpLUgy704d38RVTDy5OYL6/fWE1Ua8QJ93vyne5Bzg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher33@gmail.com"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "7491c59c-1053-4e2f-8013-28a3901f9bf0",
                            Email = "teacher34@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name34",
                            Lastname = "LastName34",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher34@gmail.com",
                            NormalizedUserName = "teacher34@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMA8e40D7xha1lIUaTJcQPJIllorDAsWITHciBfVnYHcJq3GiQv/FX7/eKUA48782g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher34@gmail.com"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "a1f81f34-b0e7-40ae-a578-785881cf1bf7",
                            Email = "teacher35@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name35",
                            Lastname = "LastName35",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher35@gmail.com",
                            NormalizedUserName = "teacher35@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAvrMa3HVAR54fwflJ7QbJ+lTsDXNYWrUskJdYF38JjDVoscTqqIUmlelHC7sIBVLg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher35@gmail.com"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "de45ef5e-0025-4265-ae63-0128dea6a2fa",
                            Email = "teacher36@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name36",
                            Lastname = "LastName36",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher36@gmail.com",
                            NormalizedUserName = "teacher36@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENWUe7WmxUgyJPzLXwK2iSNi9MO4tjoi+niFCa/gP3FHSAZ6cTE+pnRaBkyNWH+bQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher36@gmail.com"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "a27a09e1-b86a-4b8c-96ee-9c2e0fb149b4",
                            Email = "teacher37@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name37",
                            Lastname = "LastName37",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher37@gmail.com",
                            NormalizedUserName = "teacher37@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPnRUyqDamFVbjOvFAGNFBB9t+bL9/iqp9ECgzqaZv5LsbFcKc//jdg4URPyJg9NEg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher37@gmail.com"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "80ab48af-7064-431b-92da-e20971f91ccf",
                            Email = "teacher38@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name38",
                            Lastname = "LastName38",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher38@gmail.com",
                            NormalizedUserName = "teacher38@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEK7TUW9hR0G+kdtoI8Ekqz0XKBxshM/7xP5PzTyZH5bl66LxDcG4w6joewVNve0ASw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher38@gmail.com"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "df9637c1-72f9-4e8f-9454-7694b2ac38cf",
                            Email = "teacher39@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name39",
                            Lastname = "LastName39",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher39@gmail.com",
                            NormalizedUserName = "teacher39@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEODyOPbyMFQwa+yZEW3MZLfCVS5Elnluadcpms+5DqSrag532k+mdYMMhfgE821eFQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher39@gmail.com"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "e9d8a329-1948-47e7-bde9-778f734442b8",
                            Email = "teacher40@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name40",
                            Lastname = "LastName40",
                            LockoutEnabled = false,
                            NormalizedEmail = "teacher40@gmail.com",
                            NormalizedUserName = "teacher40@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENPLSkKl/rfpq8V8IoIAayuRyJ8M0JPsqHJBaKSh+19eJss1spzhEWnRdEKBRHE9lQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "teacher40@gmail.com"
                        },
                        new
                        {
                            Id = 41,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "512b41a4-c43a-4fb6-ba2e-85b514bf5e3d",
                            Email = "staff41@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name41",
                            Lastname = "LastName41",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff41@gmail.com",
                            NormalizedUserName = "staff41@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEO0c2m1EtAAFp1ufLgHDwvLVFEKKW9qYFYqjUcjJopVOlBFE/GRxhSjKrza9f6UfVw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff41@gmail.com"
                        },
                        new
                        {
                            Id = 42,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "59456c0a-5b53-45b6-83e9-a9c1f50718eb",
                            Email = "staff42@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name42",
                            Lastname = "LastName42",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff42@gmail.com",
                            NormalizedUserName = "staff42@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGgIqMM+jY3JK7/f1JxjHnjQK6oyNQj0lny9OMGJdL0MuRKRopOHiwYLFWjD8B/cxQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff42@gmail.com"
                        },
                        new
                        {
                            Id = 43,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "80675e04-a84d-4099-94c6-17323da973fc",
                            Email = "staff43@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name43",
                            Lastname = "LastName43",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff43@gmail.com",
                            NormalizedUserName = "staff43@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEKPQhJTMT9F+disz3nA8IANszfBBqAac26I8ELTAdez7JjLOsDlrHo3nXDQOjeTAzg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff43@gmail.com"
                        },
                        new
                        {
                            Id = 44,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "da503933-2f98-48e5-aa76-128e9a5b0b20",
                            Email = "staff44@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name44",
                            Lastname = "LastName44",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff44@gmail.com",
                            NormalizedUserName = "staff44@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIGKLmjbIsocH705JZUVE/O/GqQNmZm9nxGU+DGNvhU2Qpbscmejt53yOpP3yd+ZTQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff44@gmail.com"
                        },
                        new
                        {
                            Id = 45,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "adab0745-ca89-4b13-b4dd-2ef763da0e7b",
                            Email = "staff45@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name45",
                            Lastname = "LastName45",
                            LockoutEnabled = false,
                            NormalizedEmail = "staff45@gmail.com",
                            NormalizedUserName = "staff45@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEBoJRQqvU4pvEqegWUj4vz+Gs0CSssd0IA3UxuuiXlztOi73sybCF5NfsWENnzoa5A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "staff45@gmail.com"
                        },
                        new
                        {
                            Id = 46,
                            AccessFailedCount = 0,
                            Address = "HCM",
                            ConcurrencyStamp = "8df2893a-73f6-4d82-8af0-7a17efdfdabd",
                            Email = "admin46@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Name46",
                            Lastname = "LastName46",
                            LockoutEnabled = false,
                            NormalizedEmail = "admin46@gmail.com",
                            NormalizedUserName = "admin46@gmail.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDEY+motos3UcPDqj7KSMUnz1YlZNfKniUIY04GyeKaFaeAh6zLVna7shkqPcS9jbg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            Status = true,
                            TwoFactorEnabled = false,
                            UserName = "admin46@gmail.com"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Category1"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Category2"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Category3"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Category4"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Category5"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Category6"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Category7"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Category8"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Category9"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Category10"
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Yoga course number 1",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course1",
                            Price = 100.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Yoga course number 2",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course2",
                            Price = 200.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Yoga course number 3",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course3",
                            Price = 300.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Yoga course number 4",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course4",
                            Price = 400.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Yoga course number 5",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course5",
                            Price = 500.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Description = "Yoga course number 6",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course6",
                            Price = 600.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Description = "Yoga course number 7",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course7",
                            Price = 700.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Description = "Yoga course number 8",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course8",
                            Price = 800.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Description = "Yoga course number 9",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course9",
                            Price = 900.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            Description = "Yoga course number 10",
                            EnddDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            Name = "Course10",
                            Price = 1000.0,
                            StartDate = new DateTime(2023, 7, 8, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Enrollment", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MemberId", "YogaClassId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 2,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 3,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 4,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 5,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 6,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 7,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 8,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 9,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 10,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 11,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 12,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 13,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 14,
                            YogaClassId = 2,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 15,
                            YogaClassId = 4,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 16,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 17,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 18,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 19,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 20,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 21,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 22,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 23,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 24,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 25,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 26,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 27,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 28,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 29,
                            YogaClassId = 8,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            MemberId = 30,
                            YogaClassId = 6,
                            Discount = 0.0,
                            EnrollDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("MemberLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            MemberLevel = 0
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            MemberLevel = 0
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Schedule", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.HasKey("TimeSlotId", "YogaClassId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("Schedule");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 11,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 13,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 15,
                            YogaClassId = 1
                        },
                        new
                        {
                            TimeSlotId = 12,
                            YogaClassId = 2
                        },
                        new
                        {
                            TimeSlotId = 14,
                            YogaClassId = 2
                        },
                        new
                        {
                            TimeSlotId = 21,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 23,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 25,
                            YogaClassId = 3
                        },
                        new
                        {
                            TimeSlotId = 22,
                            YogaClassId = 4
                        },
                        new
                        {
                            TimeSlotId = 24,
                            YogaClassId = 4
                        },
                        new
                        {
                            TimeSlotId = 31,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 33,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 35,
                            YogaClassId = 5
                        },
                        new
                        {
                            TimeSlotId = 32,
                            YogaClassId = 6
                        },
                        new
                        {
                            TimeSlotId = 34,
                            YogaClassId = 6
                        },
                        new
                        {
                            TimeSlotId = 16,
                            YogaClassId = 7
                        },
                        new
                        {
                            TimeSlotId = 17,
                            YogaClassId = 7
                        },
                        new
                        {
                            TimeSlotId = 26,
                            YogaClassId = 8
                        },
                        new
                        {
                            TimeSlotId = 27,
                            YogaClassId = 8
                        },
                        new
                        {
                            TimeSlotId = 36,
                            YogaClassId = 9
                        },
                        new
                        {
                            TimeSlotId = 37,
                            YogaClassId = 10
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherEnrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherProfileId");

                    b.HasIndex("YogaClassId");

                    b.ToTable("TeacherEnrollments");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            EndDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 31,
                            YogaClassId = 4
                        },
                        new
                        {
                            Id = 32,
                            EndDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 32,
                            YogaClassId = 2
                        },
                        new
                        {
                            Id = 33,
                            EndDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 33,
                            YogaClassId = 4
                        },
                        new
                        {
                            Id = 34,
                            EndDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 34,
                            YogaClassId = 2
                        },
                        new
                        {
                            Id = 35,
                            EndDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            StartDate = new DateTime(2023, 7, 9, 0, 0, 0, 0, DateTimeKind.Local),
                            TeacherProfileId = 35,
                            YogaClassId = 4
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("TeacherProfiles");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            AppUserId = 31
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 32
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 33
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 34
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 35
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 36
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 37
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 38
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 39
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 40
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherSchedule", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherProfileId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTaken")
                        .HasColumnType("bit");

                    b.HasKey("TimeSlotId", "TeacherProfileId");

                    b.HasIndex("TeacherProfileId");

                    b.ToTable("TeacherSchedule");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 11,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 12,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 13,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 14,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 15,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 16,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 17,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 21,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 22,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 23,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 24,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 25,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 26,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 27,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 31,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 32,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 33,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 34,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 35,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 36,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 37,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 38,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 39,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 31,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 32,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 33,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 34,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 35,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 36,
                            TeacherProfileId = 40,
                            IsTaken = false
                        },
                        new
                        {
                            TimeSlotId = 37,
                            TeacherProfileId = 40,
                            IsTaken = false
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            Id = 11,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 12,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 13,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 14,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 15,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 16,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 17,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 21,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 22,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 23,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 24,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 25,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 26,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 27,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 31,
                            DayOfWeek = 1,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 32,
                            DayOfWeek = 2,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 33,
                            DayOfWeek = 3,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 34,
                            DayOfWeek = 4,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 35,
                            DayOfWeek = 5,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 36,
                            DayOfWeek = 6,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 37,
                            DayOfWeek = 0,
                            EndTime = new DateTime(1, 1, 1, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(1, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<bool>("IsAdminWallet")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId")
                        .IsUnique();

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 3,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 4,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 5,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 6,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 7,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 8,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 9,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 10,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 11,
                            AppUserId = 11,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 12,
                            AppUserId = 12,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 13,
                            AppUserId = 13,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 14,
                            AppUserId = 14,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 15,
                            AppUserId = 15,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 16,
                            AppUserId = 16,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 17,
                            AppUserId = 17,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 18,
                            AppUserId = 18,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 19,
                            AppUserId = 19,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 20,
                            AppUserId = 20,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 21,
                            AppUserId = 21,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 22,
                            AppUserId = 22,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 23,
                            AppUserId = 23,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 24,
                            AppUserId = 24,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 25,
                            AppUserId = 25,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 26,
                            AppUserId = 26,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 27,
                            AppUserId = 27,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 28,
                            AppUserId = 28,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 29,
                            AppUserId = 29,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 30,
                            AppUserId = 30,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 31,
                            AppUserId = 31,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 32,
                            AppUserId = 32,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 33,
                            AppUserId = 33,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 34,
                            AppUserId = 34,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 35,
                            AppUserId = 35,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 36,
                            AppUserId = 36,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 37,
                            AppUserId = 37,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 38,
                            AppUserId = 38,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 39,
                            AppUserId = 39,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 40,
                            AppUserId = 40,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 41,
                            AppUserId = 41,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 42,
                            AppUserId = 42,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 43,
                            AppUserId = 43,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 44,
                            AppUserId = 44,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 45,
                            AppUserId = 45,
                            Balance = 0.0,
                            IsAdminWallet = false
                        },
                        new
                        {
                            Id = 46,
                            AppUserId = 46,
                            Balance = 0.0,
                            IsAdminWallet = true
                        });
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("YogaClassStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("YogaClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Class1",
                            Size = 19,
                            YogaClassStatus = 2
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Name = "Class2",
                            Size = 18,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Class3",
                            Size = 17,
                            YogaClassStatus = 2
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Name = "Class4",
                            Size = 16,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Name = "Class5",
                            Size = 15,
                            YogaClassStatus = 2
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 6,
                            Name = "Class6",
                            Size = 14,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 7,
                            Name = "Class7",
                            Size = 13,
                            YogaClassStatus = 2
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 8,
                            Name = "Class8",
                            Size = 12,
                            YogaClassStatus = 1
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 9,
                            Name = "Class9",
                            Size = 11,
                            YogaClassStatus = 2
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 10,
                            Name = "Class10",
                            Size = 10,
                            YogaClassStatus = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TeacherProfileTimeSlot", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", null)
                        .WithMany()
                        .HasForeignKey("AvailableSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", null)
                        .WithMany()
                        .HasForeignKey("AvailableTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Enrollment", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Member", "Member")
                        .WithMany("Enrollments")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("Enrollments")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("Member")
                        .HasForeignKey("YogaManagement.Domain.Models.Member", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Schedule", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", "TimeSlot")
                        .WithMany("Schedule")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("Schedule")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TimeSlot");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherEnrollment", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", "TeacherProfile")
                        .WithMany("TeacherEnrollments")
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.YogaClass", "YogaClass")
                        .WithMany("TeacherEnrollments")
                        .HasForeignKey("YogaClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");

                    b.Navigation("YogaClass");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("TeacherProfile")
                        .HasForeignKey("YogaManagement.Domain.Models.TeacherProfile", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherSchedule", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.TeacherProfile", "TeacherProfile")
                        .WithMany()
                        .HasForeignKey("TeacherProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YogaManagement.Domain.Models.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeacherProfile");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Transaction", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Wallet", "Wallet")
                        .WithMany("Transactions")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.AppUser", "AppUser")
                        .WithOne("Wallet")
                        .HasForeignKey("YogaManagement.Domain.Models.Wallet", "AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.HasOne("YogaManagement.Domain.Models.Course", "Course")
                        .WithMany("YogaClasses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.AppUser", b =>
                {
                    b.Navigation("Member");

                    b.Navigation("TeacherProfile");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Course", b =>
                {
                    b.Navigation("YogaClasses");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Member", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TeacherProfile", b =>
                {
                    b.Navigation("TeacherEnrollments");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.TimeSlot", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.Wallet", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("YogaManagement.Domain.Models.YogaClass", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Schedule");

                    b.Navigation("TeacherEnrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
